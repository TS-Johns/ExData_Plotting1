?read.table
tmpdata <- read.table("..\Data\household_power_consumption.txt", header = TRUE, sep=";", colClasses = c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
tmpdata <- read.table("../Data/household_power_consumption.txt", header = TRUE, sep=";", colClasses = c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
tmpdata <- read.table("../Data/household_power_consumption.txt", header = TRUE, sep=";")
str(tmpdata)
names(tmpdata)
?read.table
tmpdata <- read.table("../Data/household_power_consumption.txt", header = TRUE, sep=";", colClasses = c("character","character","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
tmpdata <- read.table("../Data/household_power_consumption.txt", header = TRUE, sep=";", stringsAsFactors=FALSE, check.names=FALSE)
str(tmpdata)
subsetData <- subset(tmpdata, Date == "01/02/2007" | Date == "02/02/2007")
head(tmpdata)
head(tmpdata, 500)
subsetData <- subset(tmpdata, Date == "1/2/2007" | Date == "2/2/2007")
head(subsetData)
?hist
hist(as.numeric(subsetData$Global_active_power))
clear(tmpdata)
remove(tmpdata)
subset$Global_active_power <- as.numeric(subset$Global_active_power)
hist(as.numeric(subsetData$Global_active_power))
hist(as.numeric(subsetData$Global_active_power), col="red")
hist(as.numeric(subsetData$Global_active_power), col="red", xlabel="GGG")
hist(as.numeric(subsetData$Global_active_power), col="red", xlab="GGG")
## ----------------------------------- Step 01: Set Variables -----------------------------------
dataFilePathName <- "../Data/household_power_consumption.txt"
# Note: Date oiginally read in as character in d/m/yyyy format, using that format to isolate desired data
dateStart <- "1/2/2007"
dateEnd <- "2/2/2007"
## ----------------------------------- Step 02: Load & Get Data to Plot -----------------------------------
baseData <- read.table(dataFilePathName, header = TRUE, sep=";", stringsAsFactors=FALSE, check.names=FALSE)
plotData <- baseData[baseData$Date == dateStart | baseData$Date == dateEnd,]   #Limit to desired dates - using OR and character equality not date ranges, since we only need data for 2 dates
str(plotData)
plotData$Voltage <- as.numeric(plotData$Voltage)
str(plotData)
head(plotData)
names(plotData)
?read.table
?as.date
?as.Date
as.Date(head(plotData$Datae, 50), format = "%d/%m/%Y")
as.Date(head(plotData$Date, 50), format = "%d/%m/%Y")
as.Date(tail(plotData$Date, 50), format = "%d/%m/%Y")
?strptime
strptime(tail(plotData$Time, 50), format = "%d/%m/%Y")
strptime(tail(plotData$Time, 50)
)
strptime(tail(plotData$Time, 50))
strptime(tail(plotData$Time, 50), format="")
strptime(tail(plotData$Time, 50), format="%H")
?paste
strptime(tail(paste(plotData$Date, plotData$Time, sep=" "), 50), format="%H")
tail(paste(plotData$Date, plotData$Time, sep=" "), 50)
?strpdate
?strp
as.POSIXct(tail(paste(plotData$Date, plotData$Time, sep=" "), 50))
as.POSIXct(tail(paste("2007-02-02", plotData$Time, sep=" "), 50))
as.POSIXct(head(paste("2007-02-01", plotData$Time, sep=" "), 50))
plotData$Orig_date <- plotData$Date
plotData$Date <- as.Date(plotData$Date, format = "%d/%m/%Y")
head(plotData)
as.character(head(plotData$Datae))
as.character(head(plotData$Date))
as.POSIXct(head(paste(as.character(plotData$Date), plotData$Time, sep=" "), 50))
head(plotData)
plotData$DateTime <- as.POSIXct(paste(as.character(plotData$Date), plotData$Time, sep=" "))
head(plotData)
plot(plotData$Global_active_power, type="l", xaxt="n")
axis.POSIXct(1, plotData$DateTime, format="%D")
?axis.POSIXct
axis.POSIXct(1, plotData$DateTime, format="%a")
?axis.POSIXct
strptime(plotData$DateTime, format="%a")
head(plotData$DateTime, 50)
?strptime
strptime(head(plotData$DateTime, 50), format="")
strptime(head(plotData$DateTime, 50), format="%a")
strptime(head(paste(as.character(plotData$Date), plotData$Time, sep=" "), 50), format="%a")
head(paste(as.character(plotData$Date), plotData$Time, sep=" "), 50)
strptime(head(paste(as.character(plotData$Date), plotData$Time, sep=" "), 50), format="%H")
plot(plotData$Global_active_power, type="l", xaxt="n")
axis.POSIXct(1, plotData$DateTime, format="%a")
?axis.POSIXct
?range
?axis.POSIXct
plot(plotData$DateTime, plotData$Global_active_power, type="l", xaxt="n")
axis.POSIXct(1, plotData$DateTime, format="%a")
plot(plotData$DateTime, plotData$Global_active_power, type="l", xaxt="n", col="red")
par(new=TRUE)
plot(plotData$Global_reactive_power, type="l", xaxt="n", yaxt="n", col="blue")
axis.POSIXct(1, plotData$DateTime, format="%a")
plot(plotData$Global_reactive_power, type="l", xaxt="n", yaxt="n", col="blue")
axis.POSIXct(1, plotData$DateTime, format="%a")
plot(plotData$DateTime, plotData$Global_active_power, type="l", xaxt="n", col="red")
axis.POSIXct(1, plotData$DateTime, format="%a")
par(new=TRUE)
plot(plotData$Global_reactive_power, type="l", xaxt="n", yaxt="n", col="blue")
plot(plotData$DateTime, plotData$Global_active_power, type="l", xaxt="n", col="red")
axis.POSIXct(1, plotData$DateTime, format="%a")
par(new=TRUE)
plot(plotData$Global_reactive_power, type="l", xaxt="n", yaxt="n", axes=FALSE, col="blue")
?plot
plot(plotData$Global_reactive_power, type="l", xaxt="n", yaxt="n", xlab="", ylab="", col="blue")
plot(plotData$DateTime, plotData$Global_active_power, type="l", xaxt="n", col="red")
axis.POSIXct(1, plotData$DateTime, format="%a")
plot(plotData$Global_reactive_power, type="l", xaxt="n", yaxt="n", xlab="", ylab="", col="blue")
plot(plotData$DateTime, plotData$Global_active_power, type="l", xaxt="n", col="red")
axis.POSIXct(1, plotData$DateTime, format="%a")
par(new=TRUE)
plot(plotData$Global_reactive_power, type="l", xaxt="n", yaxt="n", xlab="", ylab="", col="blue")
?legend
legend("topright",c("A","B"))
?legend
?legend
legend("topright",c("A","B"), lty=1)
legend("topright",c("A","B"), lty=1, col("black","blue"))
legend("topright",c("A","B"), lty=1, col = c("black","blue"))
plot(plotData$Global_reactive_power, type="l", xaxt="n", yaxt="n", xlab="", ylab="", col="blue")
legend("topright",c("A","B"), lty=1, col = c("black","blue"))
?png
png("../test.png", height= 480, width=480)
plot(plotData$Global_reactive_power, type="l", xaxt="n", yaxt="n", xlab="", ylab="", col="blue")
legend("topright",c("A","B"), lty=1, col = c("black","blue"))
dev.off()
clear()
remove()
remove(all)
remove("all")
